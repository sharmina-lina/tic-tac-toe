name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: ./build # Adjust the path if your build artifacts are in a different folder

  test:
    runs-on: ubuntu-latest
    needs: build  # This makes the test job dependent on the build job
    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: ./build # Adjust if needed to match where you uploaded in the build job
    - run: npm test
    
  build_docker_image:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: sharmina/tic-tac-toe_v1:latest  # Replace with your Docker Hub username and repo name
    # Job to deploy Docker container to VM
  deploy:
    runs-on: ubuntu-latest
    needs: build_docker_image  # This job will run only after the build job completes successfully

    steps:
      - name: Prepare SSH key
        run: |
          echo "${{ secrets.VM_SSH_KEY }}" > vm_key.pem
          chmod 600 vm_key.pem

      - name: Deploy Docker container on VM
        env:
          VM_HOST: ${{ secrets.VM_HOST }}
          VM_USER: ${{ secrets.VM_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i vm_key.pem $VM_USER@$VM_HOST << 'EOF'
            # Log in to Docker Hub (on the VM)
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            
            # Pull the latest Docker image
            docker pull sharmina/tic-tac-toe_v1:latest

            # Stop and remove any existing container
            docker stop tic-tac-toe || true
            docker rm tic-tac-toe || true

            # Run the new container
            docker run -d -p 3000:3000 --name tic-tac-toe sharmina/tic-tac-toe_v1:latest
          EOF


